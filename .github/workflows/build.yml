name: Build and Release

on: push

jobs:
  build-and-release:
    name: Build AlfredExtraPane and release
    runs-on: macos-13
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Don't shallow-copy the repo. Need all the tags.

      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_15.2.app

      - name: Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Get App Version
        id: get_version
        run: echo "APP_VERSION=$(xcodebuild -showBuildSettings | grep MARKETING_VERSION | cut -f2 -d = | tr -d '[:space:]')" >> $GITHUB_ENV

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "refs/tags/${{ env.APP_VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Get commit messages since last release
        if: env.TAG_EXISTS == 'false'
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMIT_LIST=$(git log --pretty=format:"<li>%s</li>" --reverse)
          else
            COMMIT_LIST=$(git log ${LAST_TAG}..HEAD --pretty=format:"<li>%s</li>" --reverse)
          fi
          echo "COMMIT_LIST<<EOF" >> $GITHUB_ENV
          echo "<ul>${COMMIT_LIST}</ul>" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        if: env.TAG_EXISTS == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.APP_VERSION }}
          release_name: ${{ env.APP_VERSION }}
          body: |
            Changes in this release:
            ${{ env.COMMIT_LIST }}
          draft: false
          prerelease: false

      - name: Build App
        if: env.TAG_EXISTS == 'false'
        run: xcodebuild -project AlfredExtraPane.xcodeproj -configuration Release -scheme AlfredExtraPane -derivedDataPath DerivedData build

      - name: Copy Built App
        if: env.TAG_EXISTS == 'false'
        run: cp -r DerivedData/Build/Products/Release/AlfredExtraPane.app ./

      - name: Zip App
        if: env.TAG_EXISTS == 'false'
        run: zip -r AlfredExtraPane.app.zip AlfredExtraPane.app

      - name: Upload Release Asset
        if: env.TAG_EXISTS == 'false'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./AlfredExtraPane.app.zip
          asset_name: AlfredExtraPane.app.zip
          asset_content_type: application/zip
